// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	specskalexmillscomv1alpha1 "github.com/kalexmills/multitenancy/pkg/apis/generated/clientset/versioned/typed/specs.kalexmills.com/v1alpha1"
	v1alpha1 "github.com/kalexmills/multitenancy/pkg/apis/specs.kalexmills.com/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeTenants implements TenantInterface
type fakeTenants struct {
	*gentype.FakeClientWithList[*v1alpha1.Tenant, *v1alpha1.TenantList]
	Fake *FakeSpecsV1alpha1
}

func newFakeTenants(fake *FakeSpecsV1alpha1, namespace string) specskalexmillscomv1alpha1.TenantInterface {
	return &fakeTenants{
		gentype.NewFakeClientWithList[*v1alpha1.Tenant, *v1alpha1.TenantList](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("tenants"),
			v1alpha1.SchemeGroupVersion.WithKind("Tenant"),
			func() *v1alpha1.Tenant { return &v1alpha1.Tenant{} },
			func() *v1alpha1.TenantList { return &v1alpha1.TenantList{} },
			func(dst, src *v1alpha1.TenantList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.TenantList) []*v1alpha1.Tenant { return gentype.ToPointerSlice(list.Items) },
			func(list *v1alpha1.TenantList, items []*v1alpha1.Tenant) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
