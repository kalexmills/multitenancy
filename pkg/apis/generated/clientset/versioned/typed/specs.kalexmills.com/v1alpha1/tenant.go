// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	context "context"

	scheme "github.com/kalexmills/multitenancy/pkg/apis/generated/clientset/versioned/scheme"
	specskalexmillscomv1alpha1 "github.com/kalexmills/multitenancy/pkg/apis/specs.kalexmills.com/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// TenantsGetter has a method to return a TenantInterface.
// A group's client should implement this interface.
type TenantsGetter interface {
	Tenants(namespace string) TenantInterface
}

// TenantInterface has methods to work with Tenant resources.
type TenantInterface interface {
	Create(ctx context.Context, tenant *specskalexmillscomv1alpha1.Tenant, opts v1.CreateOptions) (*specskalexmillscomv1alpha1.Tenant, error)
	Update(ctx context.Context, tenant *specskalexmillscomv1alpha1.Tenant, opts v1.UpdateOptions) (*specskalexmillscomv1alpha1.Tenant, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, tenant *specskalexmillscomv1alpha1.Tenant, opts v1.UpdateOptions) (*specskalexmillscomv1alpha1.Tenant, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*specskalexmillscomv1alpha1.Tenant, error)
	List(ctx context.Context, opts v1.ListOptions) (*specskalexmillscomv1alpha1.TenantList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *specskalexmillscomv1alpha1.Tenant, err error)
	TenantExpansion
}

// tenants implements TenantInterface
type tenants struct {
	*gentype.ClientWithList[*specskalexmillscomv1alpha1.Tenant, *specskalexmillscomv1alpha1.TenantList]
}

// newTenants returns a tenants
func newTenants(c *SpecsV1alpha1Client, namespace string) *tenants {
	return &tenants{
		gentype.NewClientWithList[*specskalexmillscomv1alpha1.Tenant, *specskalexmillscomv1alpha1.TenantList](
			"tenants",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *specskalexmillscomv1alpha1.Tenant { return &specskalexmillscomv1alpha1.Tenant{} },
			func() *specskalexmillscomv1alpha1.TenantList { return &specskalexmillscomv1alpha1.TenantList{} },
		),
	}
}
