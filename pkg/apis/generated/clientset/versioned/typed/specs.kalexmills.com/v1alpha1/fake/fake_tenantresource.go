// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	specskalexmillscomv1alpha1 "github.com/kalexmills/multitenancy/pkg/apis/generated/clientset/versioned/typed/specs.kalexmills.com/v1alpha1"
	v1alpha1 "github.com/kalexmills/multitenancy/pkg/apis/specs.kalexmills.com/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeTenantResources implements TenantResourceInterface
type fakeTenantResources struct {
	*gentype.FakeClientWithList[*v1alpha1.TenantResource, *v1alpha1.TenantResourceList]
	Fake *FakeSpecsV1alpha1
}

func newFakeTenantResources(fake *FakeSpecsV1alpha1, namespace string) specskalexmillscomv1alpha1.TenantResourceInterface {
	return &fakeTenantResources{
		gentype.NewFakeClientWithList[*v1alpha1.TenantResource, *v1alpha1.TenantResourceList](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("tenantresources"),
			v1alpha1.SchemeGroupVersion.WithKind("TenantResource"),
			func() *v1alpha1.TenantResource { return &v1alpha1.TenantResource{} },
			func() *v1alpha1.TenantResourceList { return &v1alpha1.TenantResourceList{} },
			func(dst, src *v1alpha1.TenantResourceList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.TenantResourceList) []*v1alpha1.TenantResource {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1alpha1.TenantResourceList, items []*v1alpha1.TenantResource) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
